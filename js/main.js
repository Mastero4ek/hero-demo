(()=>{"use strict";var __webpack_modules__={206:()=>{eval("\n;// CONCATENATED MODULE: ./modules/change-cards.js\nconst changeCards = () => {\r\n\tconst cards = document.querySelector('.cards');\r\n\r\n\tcards.addEventListener('click', ({ target }) => {\r\n\t\tconst card = target.closest('.card');\r\n\r\n\t\tif (!card || target.closest('.card__description')) return;\r\n\r\n\t\tdocument.querySelector('.card--big').classList.remove('card--big');\r\n\t\tcard.classList.add('card--big');\r\n\t});\r\n}\r\n\r\n/* harmony default export */ const change_cards = (changeCards);\n;// CONCATENATED MODULE: ./modules/change-theme.js\nconst changeTheme = () => {\r\n    const body = document.querySelector('body'),\r\n        toggleBtn = document.getElementById('toggle');\r\n\r\n    localStorage.getItem('theme-btn') === 'true' ? toggleBtn.checked = true : toggleBtn.checked = false;\r\n\r\n    toggleBtn.addEventListener('change', () => {\r\n        if (toggleBtn.checked) {\r\n            body.classList.toggle('dark-theme');\r\n\r\n            localStorage.setItem('theme', body.classList.contains('dark-theme') ? 'dark-theme' : 'light-theme');\r\n            localStorage.setItem('theme-btn', true);\r\n        } else {\r\n            body.classList.toggle('dark-theme');\r\n\r\n            localStorage.setItem('theme', body.classList.contains('dark-theme') ? 'dark-theme' : 'light-theme');\r\n            localStorage.setItem('theme-btn', false);\r\n        }\r\n    });\r\n}\r\n\r\n/* harmony default export */ const change_theme = (changeTheme);\n;// CONCATENATED MODULE: ./modules/getData.js\nfunction getData(url) {\r\n    return fetch(url).then(response => response.json())\r\n}\r\n\r\n\n;// CONCATENATED MODULE: ./modules/scroll.js\nfunction scroll_scroll() {\r\n    const cardLinks = document.querySelectorAll('.card__link'),\r\n        scrollBtn = document.querySelector('.scroll-btn');\r\n\r\n    const scrollFrom = (elem) => {\r\n        const href = elem.getAttribute(\"href\"),\r\n            block = document.querySelector(href);\r\n\r\n        block.scrollIntoView({\r\n            behavior: \"smooth\",\r\n            block: \"start\"\r\n        });\r\n    }\r\n\r\n    cardLinks.forEach((link) => {\r\n        link.addEventListener('click', (e) => {\r\n            e.preventDefault();\r\n\r\n            scrollFrom(link);\r\n        });\r\n    });\r\n\r\n    scrollBtn.addEventListener('click', (e) => {\r\n        e.preventDefault();\r\n\r\n        scrollFrom(scrollBtn);\r\n    });\r\n}\r\n\r\n\n;// CONCATENATED MODULE: ./modules/turn-cards.js\nfunction turnCards() {\r\n    const cards = document.querySelectorAll('.card');\r\n\r\n    for (let i = 0; i < cards.length; i++) {\r\n        const card = cards[i];\r\n\r\n        const startRotateCard = (e) => {\r\n            const halfHeight = card.offsetHeight / 2,\r\n                halfWidth = card.offsetWidth / 2,\r\n                currentHeight = e.offsetY - halfHeight,\r\n                currentWidth = e.offsetX - halfWidth,\r\n                cardBig = document.querySelector('.card--big');\r\n\r\n            card.style.transform = `rotateX(${-currentHeight / 6}deg) rotateY(${currentWidth / 6}deg`;\r\n            card.style.boxShadow = `${-currentWidth / 10}px ${-currentHeight / 10}px 1rem .1rem var(--boxShadowColor)`;\r\n\r\n            cardBig.style.transform = '';\r\n            cardBig.style.boxShadow = '';\r\n        }\r\n\r\n        const stopRotateCard = (e) => {\r\n            card.style.transform = '';\r\n            card.style.boxShadow = '';\r\n        }\r\n\r\n        card.addEventListener('mousemove', startRotateCard);\r\n        card.addEventListener('mouseout', stopRotateCard);\r\n    }\r\n\r\n}\r\n\r\n\n;// CONCATENATED MODULE: ./modules/helpers.js\nfunction searchObj(arr, obj) {\r\n    return arr.filter(item => Object.keys(obj).every(key => item[key] === obj[key]));\r\n}\r\n\r\nfunction capitalize(str) {\r\n    if (!str) return\r\n\r\n    return str.replace(/(^|\\s)\\S/g, function (a) {\r\n        return a.toUpperCase();\r\n    });\r\n}\r\n\r\n\n;// CONCATENATED MODULE: ./modules/render.js\n\r\n\r\n\r\n\r\nfunction renderData(data) {\r\n\tconst cardsWrapper = document.getElementById('cards'),\r\n\t\tunknown = 'unknown';\r\n\r\n\tconst error = document.createElement('div');\r\n\terror.classList.add('cards-error');\r\n\r\n\terror.innerHTML = 'Hero not found!'\r\n\tcardsWrapper.innerHTML = '';\r\n\r\n\tdata.forEach((item) => {\r\n\t\tconst card = document.createElement('div');\r\n\r\n\t\tcard.classList.add('card');\r\n\r\n\t\tcard.insertAdjacentHTML('beforeend',\r\n\t\t\t`<a href=\"#filter\" class=\"card__link\"></a>\r\n\r\n\t\t\t\t<div class=\"card__photo\">\r\n\t\t\t\t\t<img src=${item.photo ? item.photo : unknown} alt=\"#\">\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<h4 class=\"card__name\">${item.name ? capitalize(item.name) : unknown}</h4>\r\n\r\n\t\t\t\t<div class=\"card__description\">\r\n\t\t\t\t\t<div class=\"card__value\">\r\n\t\t\t\t\t\t<p class=\"card__value-txt\">RealName: </p>\r\n\t\t\t\t\t\t<span class=\"card__txt card-realname\">${item.realName ? capitalize(item.realName) : unknown}</span>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div class=\"card__value\">\r\n\t\t\t\t\t\t<p class=\"card__value-txt\">Species: </p>\r\n\t\t\t\t\t\t<span class=\"card__txt card-species\">${item.species ? capitalize(item.species) : unknown}</span>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div class=\"card__value\">\r\n\t\t\t\t\t\t<p class=\"card__value-txt\">Citizenship: </p>\r\n\t\t\t\t\t\t<span class=\"card__txt card-citizenship\">${item.citizenship ? capitalize(item.citizenship) : unknown}</span>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div class=\"card__value\">\r\n\t\t\t\t\t\t<p class=\"card__value-txt\">Gender: </p>\r\n\t\t\t\t\t\t<span class=\"card__txt card-gender\">${item.gender ? capitalize(item.gender) : unknown}</span>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div class=\"card__value\">\r\n\t\t\t\t\t\t<p class=\"card__value-txt\">Years of life:</p>\r\n\t\t\t\t\t\t<span class=\"card__txt card-birthday\">${item.birthDay ? capitalize(item.birthDay) : unknown}-${item.deathDay ? item.deathDay : unknown}</span>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div class=\"card__value\">\r\n\t\t\t\t\t\t<p class=\"card__value-txt\">Status: </p>\r\n\t\t\t\t\t\t<span class=\"card__txt card-status\">${item.status ? capitalize(item.status) : unknown}</span>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div class=\"card__value\">\r\n\t\t\t\t\t\t<p class=\"card__value-txt\">Actors: </p>\r\n\t\t\t\t\t\t<span class=\"card__txt card-actor\">${item.actors ? capitalize(item.actors) : unknown}</span>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div class=\"card__value movies\">\r\n\t\t\t\t\t\t<p class=\"card__value-txt\">Movies: </p>\r\n\t\t\t\t\t\t<span class=\"card__txt card-movies\">${item.movies ? item.movies : unknown}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>`\r\n\t\t);\r\n\r\n\t\tcardsWrapper.append(card);\r\n\t});\r\n\r\n\tconst cards = document.querySelectorAll('.card');\r\n\r\n\tif (!cards[0]) return cardsWrapper.append(error);\r\n\tcards[0].classList.add('card--big');\r\n\r\n\tscroll_scroll();\r\n\tturnCards();\r\n}\r\n\r\n\n;// CONCATENATED MODULE: ./modules/filters.js\n\r\n\r\n\r\n\r\nconst filters = () => {\r\n    const gender = document.querySelectorAll('input[name=gender]'),\r\n        status = document.getElementById('status'),\r\n        species = document.getElementById('species'),\r\n        citizenship = document.getElementById('citizenship'),\r\n        movies = document.getElementById('movies'),\r\n\r\n        renderBtn = document.getElementById('render-button'),\r\n        deleteBtn = document.getElementById('delete-button');\r\n\r\n    let hero = {};\r\n    let newData = [];\r\n\r\n    function clearFilters() {\r\n        for (let i = 0; i < gender.length; i++) {\r\n            gender[i].checked = false;\r\n        }\r\n\r\n        status.value = '';\r\n        species.value = '';\r\n        citizenship.value = '';\r\n        movies.value = '';\r\n        input.value = '';\r\n\r\n        hero = {};\r\n        newData = [];\r\n    }\r\n    clearFilters()\r\n\r\n    function renderMovies(data) {\r\n        newData = [];\r\n\r\n        data.forEach(item => {\r\n            for (let i in item.movies) {\r\n                if (item.movies[i] == movies.value) {\r\n                    newData.push(item);\r\n                }\r\n            }\r\n        });\r\n\r\n        JSON.stringify(hero) == '{}' ? renderData(newData) : renderData(searchObj(newData, hero));\r\n    }\r\n\r\n    for (let i = 0; i < gender.length; i++) {\r\n        gender[i].addEventListener('change', () => {\r\n            if (gender[i].type == \"radio\" && gender[i].checked) {\r\n                hero.gender = gender[i].value;\r\n            }\r\n        });\r\n    }\r\n\r\n    status.addEventListener('change', () => hero.status = status.value);\r\n    species.addEventListener('change', () => hero.species = species.value);\r\n    citizenship.addEventListener('change', () => hero.citizenship = citizenship.value);\r\n    movies.addEventListener('change', () => getData('./db/dbHeroes.json').then((data) => renderMovies(data)));\r\n\r\n    renderBtn.addEventListener('click', (e) => {\r\n        e.preventDefault();\r\n\r\n        getData('./db/dbHeroes.json').then(data => movies.value == '' ? renderData(searchObj(data, hero)) : renderData(searchObj(newData, hero)));\r\n    });\r\n\r\n    deleteBtn.addEventListener('click', (e) => {\r\n        e.preventDefault();\r\n\r\n        clearFilters();\r\n        getData('./db/dbHeroes.json').then(data => renderData(data));\r\n    });\r\n}\r\n\r\n/* harmony default export */ const modules_filters = (filters);\n;// CONCATENATED MODULE: ./modules/search.js\n\r\n\r\n\r\nconst search = () => {\r\n    const input = document.getElementById('input');\r\n\r\n    let newData = [];\r\n\r\n    function renderByName(data) {\r\n        let value = input.value.trim();\r\n\r\n        newData = [];\r\n\r\n        if (value != '') {\r\n            data.forEach(item => {\r\n                if (!item.name) return;\r\n\r\n                if (item.name.includes(input.value)) {\r\n                    newData.push(item);\r\n                    renderData(newData);\r\n                } else {\r\n                    renderData(newData);\r\n                }\r\n            });\r\n        } else {\r\n            renderData(data);\r\n        }\r\n    }\r\n\r\n    input.addEventListener('input', () => getData('./db/dbHeroes.json').then(data => renderByName(data)));\r\n}\r\n\r\n/* harmony default export */ const modules_search = (search);\n;// CONCATENATED MODULE: ./modules/movies-filter.js\n\r\n\r\nconst filterMovies = () => {\r\n    const moviesFilter = document.getElementById('movies');\r\n\r\n    let movies = [],\r\n        currentMovies = [];\r\n\r\n    function sortValue(data) {\r\n        data.forEach((item) => {\r\n            if (!item.movies) return\r\n\r\n            item.movies.find((e) => {\r\n                movies.push(e);\r\n            });\r\n        });\r\n\r\n        currentMovies = new Set(movies);\r\n\r\n        currentMovies.forEach((item) => {\r\n            moviesFilter.insertAdjacentHTML('beforeend', `<option value=\"${item}\">${item}</option>`)\r\n        });\r\n    }\r\n\r\n    getData('./db/dbHeroes.json').then(data => sortValue(data));\r\n}\r\n\r\n/* harmony default export */ const movies_filter = (filterMovies);\n;// CONCATENATED MODULE: ./modules/citizenship-filter.js\n\r\n\r\n\r\nconst filterCitizenship = () => {\r\n    const citizenshipFilter = document.getElementById('citizenship');\r\n\r\n    let citizenship = [],\r\n        currentCitizenship = [];\r\n\r\n    function sortValue(data) {\r\n        data.forEach((item) => {\r\n            if (!item.citizenship) return\r\n\r\n            citizenship.push(capitalize(item.citizenship));\r\n        });\r\n\r\n        currentCitizenship = new Set(citizenship);\r\n\r\n        currentCitizenship.forEach((item) => {\r\n            citizenshipFilter.insertAdjacentHTML('beforeend', `<option value=\"${item}\">${item}</option>`)\r\n        });\r\n    }\r\n\r\n    getData('./db/dbHeroes.json').then(data => sortValue(data));\r\n}\r\n\r\n/* harmony default export */ const citizenship_filter = (filterCitizenship);\n;// CONCATENATED MODULE: ./index.js\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\ngetData('./db/dbHeroes.json').then(data => renderData(data));\r\n\r\nchange_cards()\r\nchange_theme()\r\nmodules_filters()\r\nmodules_search()\r\n\r\nmovies_filter()\r\ncitizenship_filter()//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///206\n")}},__webpack_exports__={};__webpack_modules__[206]()})();